/*
 * outlineInformation.java
 *
 * Created on September 6, 2007, 9:12 PM
 */

package outline;

import java.awt.Polygon;

/**
 *
 * @author  projects
 */
public class outlineInformation extends javax.swing.JPanel {
    outlineOrganizer oo = null;
    double[][] coordinates =null;
    public double cSize = 0;
    public int pArea = 0;
    
    /** Creates new form outlineInformation */
    public outlineInformation(Polygon p, outlineOrganizer Oo) {
        initComponents();
        if(p!=null) {
            outlineGraphic.p1 = p;
            coordinates = Outlines.extractCoordinates(p);
            setOutlineInformation();
            oo=Oo;
        }
    }
    public outlineInformation() {
        initComponents();
    }
    
    public void setOutlineInformation() {
        if(coordinates!=null) {
            if(cSize<=0) cSize = Outlines.findCentroidDistance(coordinates);
            centroidSize.setText("Centroid size: " + Math.round(cSize));
            //System.out.println("The centroid size is " + Outlines.findCentroidDistance(coordinates));
        }
        else centroidSize.setText("Unable to calculate");
        if(pArea<=0) pArea=Outlines.findArea(outlineGraphic.p1);
        pixelArea.setText("Pixel area: " + pArea);
        //System.out.println("The pixel area is " + Outlines.findArea(outlineGraphic.p));
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        outlineGraphic = new outline.outlineDrawer();
        centroidSize = new javax.swing.JLabel();
        pixelArea = new javax.swing.JLabel();
        keepOutline = new javax.swing.JCheckBox();

        keepOutline.setSelected(true);
        keepOutline.setText("Keep outline");
        keepOutline.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        keepOutline.setMargin(new java.awt.Insets(0, 0, 0, 0));
        keepOutline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keepOutlineActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(outlineGraphic, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(keepOutline, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pixelArea)
                    .addComponent(centroidSize)))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {centroidSize, keepOutline, pixelArea});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(outlineGraphic, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(keepOutline)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pixelArea)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(centroidSize, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {centroidSize, keepOutline, pixelArea});

    }// </editor-fold>//GEN-END:initComponents
    
    private void keepOutlineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keepOutlineActionPerformed
        
         if(oo!=null && oo.keep!=null) {
            oo.keep[oo.curCnt]=keepOutline.isSelected();
            oo.om.fi.nOutlines=oo.keptOutlines();
            oo.om.fi.numberText.setText(Integer.toString(oo.om.fi.nOutlines));
            oo.om.fi.repaint();
            //System.out.println("Checkbox of leaf " + oo.curCnt + " is now " + keepOutline.isSelected());
        }
        
    }//GEN-LAST:event_keepOutlineActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel centroidSize;
    public javax.swing.JCheckBox keepOutline;
    public outline.outlineDrawer outlineGraphic;
    public javax.swing.JLabel pixelArea;
    // End of variables declaration//GEN-END:variables
    
}
