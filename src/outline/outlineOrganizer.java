/*
 * outlineOrganizer.java
 *
 * Created on September 6, 2007, 9:39 PM
 */

package outline;

import java.awt.Event;
import java.awt.Polygon;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.EventListener;

/**
 *
 * @author  projects
 */
public class outlineOrganizer extends javax.swing.JInternalFrame {
    public int curCnt=0;
    public Polygon[] p;
    boolean[] keep=null;
    double[] cSize;
    int[] pArea;
    outlineMain om=null;
    
    /** Creates new form outlineOrganizer */
    public outlineOrganizer(outlineMain om) {
        super("Outline",
                false, //resizable
                true, //closable
                false, //maximizable
                true);//iconifiable
        initComponents();
       
        outlineInformation1.oo=this;
        this.om=om;
    }
    
    
    public outlineOrganizer(Polygon[] p, outlineMain om) {
        super("Outline",
                false, //resizable
                true, //closable
                false, //maximizable
                true);//iconifiable
        initComponents();
        this.om = om;
         
        outlineInformation1.oo=this;
        if(p!=null) {
            pArea= new int[p.length];
            cSize = new double[p.length];
            keep = new boolean[p.length];
            for(int i=0; i<p.length; i++)
                keep[i]=true;
            this.p = p;
            curCnt=0;
            setOutlineInformation();
            setButtons();
            outlineNumber.setText("Total outlines: " + p.length);
           
        }
    }
    
    public void setOutlineInformation() {
        outlineInformation1.coordinates = Outlines.extractCoordinates(p[curCnt]);
        outlineInformation1.outlineGraphic.p1=p[curCnt];
        if(pArea[curCnt]<=0 ) {
            pArea[curCnt]=Outlines.findArea(p[curCnt]);
        }
        if(cSize[curCnt]<=0) {
            cSize[curCnt]=Outlines.findCentroidDistance(outlineInformation1.coordinates);
        }
        outlineInformation1.pArea=pArea[curCnt];
        outlineInformation1.cSize=cSize[curCnt];
        
        outlineInformation1.setOutlineInformation();
        outlineInformation1.repaint();
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        outlineNumber = new javax.swing.JLabel();
        previousOutline = new javax.swing.JButton();
        nextOutline = new javax.swing.JButton();
        outlineInformation1 = new outline.outlineInformation();

        setTitle("Outline Organizer");
        outlineNumber.setText("Total outlines:        ");

        previousOutline.setText("Previous");
        previousOutline.setEnabled(false);
        previousOutline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousOutlineActionPerformed(evt);
            }
        });

        nextOutline.setText("Next");
        nextOutline.setEnabled(false);
        nextOutline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextOutlineActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(outlineInformation1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nextOutline)
                    .addComponent(previousOutline)
                    .addComponent(outlineNumber))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {nextOutline, outlineNumber, previousOutline});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(outlineInformation1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(previousOutline)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nextOutline)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(outlineNumber)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents
    //public void actionPerformed(ActionEvent e) {
    //if ("new".equals(e.getActionCommand())) { //new
    //  createFrame();
    //} else { //quit
    //  quit();
    //}
    //  outlineInformation1.repaint();
    //}
    
    public void setButtons() {
        int len = 0;
        if(p!=null)
            len = p.length;
        if(len==0) {
            previousOutline.setEnabled(false);
            nextOutline.setEnabled(false);
        } else if(curCnt==0) {
            previousOutline.setEnabled(false);
            if(len>1) {
                nextOutline.setEnabled(true);
            }
        } else if(curCnt>0 && curCnt<len-1) {
            previousOutline.setEnabled(true);
            nextOutline.setEnabled(true);
        } else if(curCnt==len-1) {
            nextOutline.setEnabled(false);
            if(len>1) {
                previousOutline.setEnabled(true);
            }
        }
    }
    
    public int keptOutlines() {
        int out=0;
        if(keep==null)
            return 0;
        for(int i=0; i<keep.length; i++)
            if(keep[i]) out++;
        return out;
    }
    
    private void nextOutlineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextOutlineActionPerformed
        
        curCnt++;
        outlineInformation1.keepOutline.setSelected(keep[curCnt]);
        outlineInformation1.keepOutline.setText("Keep outline " + (curCnt+1));
        setOutlineInformation();
        setButtons();
        
    }//GEN-LAST:event_nextOutlineActionPerformed
    
    private void previousOutlineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousOutlineActionPerformed
        
        curCnt--;
        outlineInformation1.keepOutline.setSelected(keep[curCnt]);
        outlineInformation1.keepOutline.setText("Keep outline " + (curCnt+1));
        setOutlineInformation();
        setButtons();
        
    }//GEN-LAST:event_previousOutlineActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton nextOutline;
    private outline.outlineInformation outlineInformation1;
    public javax.swing.JLabel outlineNumber;
    private javax.swing.JButton previousOutline;
    // End of variables declaration//GEN-END:variables
    
}
